{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2023-07-14T20:27:39.088Z",
    "end": "2023-07-14T20:28:13.189Z",
    "duration": 34101,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "12e661d1-b4bd-400e-aaef-ae361246fdb5",
      "title": "",
      "fullFile": "cypress\\e2e\\features\\Login.feature",
      "file": "cypress\\e2e\\features\\Login.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5584d7d9-0cb3-4d96-941f-1be745a77b7c",
          "title": "Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Positive LogIn test",
              "fullTitle": "Login Positive LogIn test",
              "timedOut": null,
              "duration": 11618,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9909d88f-a4f0-45cf-93f4-213a24a6b351",
              "parentUUID": "5584d7d9-0cb3-4d96-941f-1be745a77b7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative username test",
              "fullTitle": "Login Negative username test",
              "timedOut": null,
              "duration": 1875,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "eba47412-1d11-4931-9e1f-edc5533d1e7c",
              "parentUUID": "5584d7d9-0cb3-4d96-941f-1be745a77b7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative password test",
              "fullTitle": "Login Negative password test",
              "timedOut": null,
              "duration": 2467,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2d52ab6c-2226-4685-884b-c0be76e2050e",
              "parentUUID": "5584d7d9-0cb3-4d96-941f-1be745a77b7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative username & password test",
              "fullTitle": "Login Negative username & password test",
              "timedOut": null,
              "duration": 2149,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fef13cd4-5804-40db-8c79-77376602d0bd",
              "parentUUID": "5584d7d9-0cb3-4d96-941f-1be745a77b7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Submit blank username & password test",
              "fullTitle": "Login Submit blank username & password test",
              "timedOut": null,
              "duration": 1280,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "50848a07-84e6-47b7-a652-a0643d63d2f0",
              "parentUUID": "5584d7d9-0cb3-4d96-941f-1be745a77b7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Password field blank with valid username test",
              "fullTitle": "Login Password field blank with valid username test",
              "timedOut": null,
              "duration": 1402,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1b6d4155-7048-4789-b118-786b4a158eb4",
              "parentUUID": "5584d7d9-0cb3-4d96-941f-1be745a77b7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Username field blank with valid password test",
              "fullTitle": "Login Username field blank with valid password test",
              "timedOut": null,
              "duration": 1849,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a060d0c4-7602-4737-ba54-807d16a260e7",
              "parentUUID": "5584d7d9-0cb3-4d96-941f-1be745a77b7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate success text after a successful login",
              "fullTitle": "Login Validate success text after a successful login",
              "timedOut": null,
              "duration": 3431,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4be5137e-f2e6-4b34-9354-b8f04748e037",
              "parentUUID": "5584d7d9-0cb3-4d96-941f-1be745a77b7c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9909d88f-a4f0-45cf-93f4-213a24a6b351",
            "eba47412-1d11-4931-9e1f-edc5533d1e7c",
            "2d52ab6c-2226-4685-884b-c0be76e2050e",
            "fef13cd4-5804-40db-8c79-77376602d0bd",
            "50848a07-84e6-47b7-a652-a0643d63d2f0",
            "1b6d4155-7048-4789-b118-786b4a158eb4",
            "a060d0c4-7602-4737-ba54-807d16a260e7",
            "4be5137e-f2e6-4b34-9354-b8f04748e037"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26071,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}