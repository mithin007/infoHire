{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2023-07-14T20:26:27.733Z",
    "end": "2023-07-14T20:26:56.450Z",
    "duration": 28717,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7afc22a9-2a00-45ae-8d45-e71b78530f24",
      "title": "",
      "fullFile": "cypress\\e2e\\features\\Login.feature",
      "file": "cypress\\e2e\\features\\Login.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8031475f-97cf-4a2d-820e-a93dc1e1d909",
          "title": "Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Positive LogIn test",
              "fullTitle": "Login Positive LogIn test",
              "timedOut": null,
              "duration": 10167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d566d56c-000e-4dbb-ab3e-d675d1b7ba96",
              "parentUUID": "8031475f-97cf-4a2d-820e-a93dc1e1d909",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative username test",
              "fullTitle": "Login Negative username test",
              "timedOut": null,
              "duration": 1604,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b2bcc8dc-f914-45d9-98a2-ba8b72baa509",
              "parentUUID": "8031475f-97cf-4a2d-820e-a93dc1e1d909",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative password test",
              "fullTitle": "Login Negative password test",
              "timedOut": null,
              "duration": 1504,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9cad2710-ef28-44fe-8a31-0ea7d19353a8",
              "parentUUID": "8031475f-97cf-4a2d-820e-a93dc1e1d909",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative username & password test",
              "fullTitle": "Login Negative username & password test",
              "timedOut": null,
              "duration": 1688,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "22f4661c-5cf9-4ebf-8945-44b5676f50a9",
              "parentUUID": "8031475f-97cf-4a2d-820e-a93dc1e1d909",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Submit blank username & password test",
              "fullTitle": "Login Submit blank username & password test",
              "timedOut": null,
              "duration": 1126,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4e1e4e50-1030-4609-a379-02eb6e066cb0",
              "parentUUID": "8031475f-97cf-4a2d-820e-a93dc1e1d909",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Password field blank with valid username test",
              "fullTitle": "Login Password field blank with valid username test",
              "timedOut": null,
              "duration": 1168,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b3f2c10e-209e-43fe-a907-7f08d372e80a",
              "parentUUID": "8031475f-97cf-4a2d-820e-a93dc1e1d909",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Username field blank with valid password test",
              "fullTitle": "Login Username field blank with valid password test",
              "timedOut": null,
              "duration": 1607,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "33175272-6ea8-4944-8f07-ba694ea3cf59",
              "parentUUID": "8031475f-97cf-4a2d-820e-a93dc1e1d909",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate success text after a successful login",
              "fullTitle": "Login Validate success text after a successful login",
              "timedOut": null,
              "duration": 3083,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "92cb41ec-f656-403d-910c-f0c83e046e6d",
              "parentUUID": "8031475f-97cf-4a2d-820e-a93dc1e1d909",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d566d56c-000e-4dbb-ab3e-d675d1b7ba96",
            "b2bcc8dc-f914-45d9-98a2-ba8b72baa509",
            "9cad2710-ef28-44fe-8a31-0ea7d19353a8",
            "22f4661c-5cf9-4ebf-8945-44b5676f50a9",
            "4e1e4e50-1030-4609-a379-02eb6e066cb0",
            "b3f2c10e-209e-43fe-a907-7f08d372e80a",
            "33175272-6ea8-4944-8f07-ba694ea3cf59",
            "92cb41ec-f656-403d-910c-f0c83e046e6d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21947,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}