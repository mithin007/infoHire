{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2023-07-14T21:07:49.607Z",
    "end": "2023-07-14T21:08:20.675Z",
    "duration": 31068,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f9702b30-ef10-4e26-a5c6-27fb018f1e32",
      "title": "",
      "fullFile": "cypress\\e2e\\features\\Login.feature",
      "file": "cypress\\e2e\\features\\Login.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1ba95078-29ad-461a-9e11-577a289c36d1",
          "title": "Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Positive LogIn test",
              "fullTitle": "Login Positive LogIn test",
              "timedOut": null,
              "duration": 14487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3e736f94-9935-4b8c-a12d-79af1450a54e",
              "parentUUID": "1ba95078-29ad-461a-9e11-577a289c36d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative username test",
              "fullTitle": "Login Negative username test",
              "timedOut": null,
              "duration": 1584,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fc976ccd-e9e5-45e8-b929-50965921c5c8",
              "parentUUID": "1ba95078-29ad-461a-9e11-577a289c36d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative password test",
              "fullTitle": "Login Negative password test",
              "timedOut": null,
              "duration": 1958,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d16d49f3-8eb8-4d5a-8f63-6ece9f7e6961",
              "parentUUID": "1ba95078-29ad-461a-9e11-577a289c36d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative username & password test",
              "fullTitle": "Login Negative username & password test",
              "timedOut": null,
              "duration": 1909,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f7c7ef2f-6fff-494b-b995-6c92526bd4e7",
              "parentUUID": "1ba95078-29ad-461a-9e11-577a289c36d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Submit blank username & password test",
              "fullTitle": "Login Submit blank username & password test",
              "timedOut": null,
              "duration": 1198,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "89d74d7c-2bf7-420a-942f-5b6854478de0",
              "parentUUID": "1ba95078-29ad-461a-9e11-577a289c36d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Password field blank with valid username test",
              "fullTitle": "Login Password field blank with valid username test",
              "timedOut": null,
              "duration": 1294,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "547048a5-c245-42f4-b96c-7726807663f6",
              "parentUUID": "1ba95078-29ad-461a-9e11-577a289c36d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Username field blank with valid password test",
              "fullTitle": "Login Username field blank with valid password test",
              "timedOut": null,
              "duration": 1568,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bf9d7091-bf70-4196-9a16-051bef1d2f68",
              "parentUUID": "1ba95078-29ad-461a-9e11-577a289c36d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate success text after a successful login",
              "fullTitle": "Login Validate success text after a successful login",
              "timedOut": null,
              "duration": 3008,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "096f534b-b9a2-4cb6-9ff1-623408564768",
              "parentUUID": "1ba95078-29ad-461a-9e11-577a289c36d1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e736f94-9935-4b8c-a12d-79af1450a54e",
            "fc976ccd-e9e5-45e8-b929-50965921c5c8",
            "d16d49f3-8eb8-4d5a-8f63-6ece9f7e6961",
            "f7c7ef2f-6fff-494b-b995-6c92526bd4e7",
            "89d74d7c-2bf7-420a-942f-5b6854478de0",
            "547048a5-c245-42f4-b96c-7726807663f6",
            "bf9d7091-bf70-4196-9a16-051bef1d2f68",
            "096f534b-b9a2-4cb6-9ff1-623408564768"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27006,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}